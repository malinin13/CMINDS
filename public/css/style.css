/*  Syntax Quick Reference
  --------------------------
  column($ratios: 1, $offset: 0, $cycle: 0, $uncycle: 0, $gutter: $jeet-gutter)
  span($ratio: 1, $offset: 0)
  shift($ratios: 0, $col_or_span: column, $gutter: $jeet-gutter)
  unshift()
  edit()
  center($max_width: 1410px, $pad: 0)
  stack($pad: 0, $align: false)
  unstack()
  align($direction: both)
  cf()
*/
/**
 * Grid settings.
 * All values are defaults and can therefore be easily overidden.
 */
/**
 * List functions courtesy of the wonderful folks at Team Sass.
 * Check out their awesome grid: Singularity.
 */
/**
 * Get  percentage from a given ratio.
 * @param {number} [$ratio=1] - The column ratio of the element.
 * @returns {number} - The percentage value.
 */
/**
 * Work out the column widths based on the ratio and gutter sizes.
 * @param {number} [$ratios=1] - The column ratio of the element.
 * @param {number} [$gutter=$jeet-gutter] - The gutter for the column.
 * @returns {list} $width $gutter - A list containing the with and gutter for the element.
 */
/**
 * Get the set layout direction for the project.
 * @returns {string} $direction - The layout direction.
 */
/**
 * Replace a specified list value with a new value (uses built in set-nth() if available)
 * @param {list} $list - The list of values you want to alter.
 * @param {number} $index - The index of the list item you want to replace.
 * @param {*} $value - The value you want to replace $index with.
 * @returns {list} $list - The list with the value replaced or removed.
 * @warn if an invalid index is supplied.
 */
/**
 * Reverse a list (progressively enhanced for Sass 3.3)
 * @param {list} $list - The list of values you want to reverse.
 * @returns {list} $result - The reversed list.
 */
/**
 * Get the opposite direction to a given value.
 * @param {string} $dir - The direction you want the opposite of.
 * @returns {string} - The opposite direction to $dir.
 * @warn if an incorrect string is provided.
 */
/**
 * Style an element as a column with a gutter.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$offset=0] - A offset specified as a fraction (see $ratios).
 * @param {number} [$cycle=0] - Easily create an nth column grid where $cycle equals the number of columns.
 * @param {number} [$uncycle=0] - Undo a previous cycle value to allow for a new one.
 * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * An alias for the column mixin.
 * @param [$args...] - All arguments get passed through to column().
 */
/**
 * Get the width of a column and nothing else.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * Get the gutter size of a column and nothing else.
 * @param {number} [ratios=1] - A width relative to its container as a fraction.
 * @param {number} [gutter=jeet.gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * An alias for the column-width function.
 * @param [$args...] - All arguments get passed through to column().
 */
/**
 * An alias for the column-gutter function.
 * @param [$args...] - All arguments get passed through to column().
 */
/**
 * Style an element as a column without any gutters for a seamless row.
 * @param {number} [$ratios=1] - A width relative to its container as a fraction.
 * @param {number} [$offset=0] - A offset specified as a fraction (see $ratios).
 * @param {number} [cycle=0] - Easily create an nth column grid where cycle equals the number of columns.
 * @param {number} [uncycle=0] - Undo a previous cycle value to allow for a new one.
 */
/**
 * Reorder columns without altering the HTML.
 * @param {number} [$ratios=0] - Specify how far along you want the element to move.
 * @param {string} [$col-or-span=column] - Specify whether the element has a gutter or not.
 * @param {number} [$gutter=$jeet-gutter] - Specify the gutter width as a percentage of the containers width.
 */
/**
 * Reset an element that has had shift() applied to it.
 */
/**
 * View the grid and its layers for easy debugging.
 * @param {string} [$color=black] - The background tint applied.
 * @param {boolean} [$important=false] - Whether to apply the style as !important.
 */
/**
 *  Alias for edit().
 */
/**
 * Horizontally center an element.
 * @param {number} [$max-width=1410px] - The max width the element can be.
 * @param {number} [$pad=0] - Specify the element's left and right padding.
 */
/**
 * Uncenter an element.
 */
/**
 * Stack an element so that nothing is either side of it.
 * @param {number} [$pad=0] - Specify the element's left and right padding.
 * @param {boolean/string} [$align=false] - Specify the text align for the element.
 */
/**
 * Unstack an element.
 */
/**
 * Center an element on either or both axes.
 * @requires A parent container with relative positioning.
 * @param {string} [$direction=both] - Specify which axes to center the element on.
 */
/**
 * Apply a clearfix to an element.
 */
body {
  font-family: 'Open Sans'; }

h1 {
  font-size: 26px;
  font-weight: 700; }

a {
  color: #467920;
  font-size: 14px;
  text-decoration: none; }

.text-center {
  text-align: center !important; }

b {
  font-weight: 600; }

.black-text {
  color: #333333; }

.gray-text {
  color: #808080; }

.green-text {
  color: #467920; }

.blue-text {
  color: #0a6e99; }

.section-features {
  margin-bottom: 10px; }
  .section-features .large-text {
    font-size: 18px;
    font-weight: 400;
    line-height: 10px; }
    .section-features .large-text b {
      font-size: 38px;
      text-transform: uppercase;
      line-height: 35px; }
  .section-features .large-text,
  .section-features .description {
    display: inline-block; }
  .section-features p {
    margin: 0; }
  .section-features .feature {
    padding-top: 11px;
    height: 70px; }
  .section-features .feature:nth-child(1) {
    *zoom: 1;
    float: left;
    clear: none;
    text-align: inherit;
    width: 32.1625%;
    margin-left: 0%;
    margin-right: 0.5%; }
    .section-features .feature:nth-child(1):before, .section-features .feature:nth-child(1):after {
      content: '';
      display: table; }
    .section-features .feature:nth-child(1):after {
      clear: both; }
    .section-features .feature:nth-child(1):last-child {
      margin-right: 0%; }
    .section-features .feature:nth-child(1) .large-text {
      margin-left: 35px; }
    .section-features .feature:nth-child(1) .black-text {
      font-size: 18px; }
    .section-features .feature:nth-child(1) .gray-text {
      font-size: 13px;
      line-height: 10px; }
    .section-features .feature:nth-child(1) .green-text {
      font-size: 12px; }
  .section-features .feature:nth-child(2) {
    *zoom: 1;
    float: left;
    clear: none;
    text-align: inherit;
    width: 24.223%;
    margin-left: 0%;
    margin-right: 0.5%; }
    .section-features .feature:nth-child(2):before, .section-features .feature:nth-child(2):after {
      content: '';
      display: table; }
    .section-features .feature:nth-child(2):after {
      clear: both; }
    .section-features .feature:nth-child(2):last-child {
      margin-right: 0%; }
    .section-features .feature:nth-child(2) .large-text {
      margin-left: 45px;
      letter-spacing: 4px; }
      .section-features .feature:nth-child(2) .large-text b {
        letter-spacing: normal; }
    .section-features .feature:nth-child(2) .description {
      line-height: 20px;
      vertical-align: top;
      margin-top: 5px; }
      .section-features .feature:nth-child(2) .description span {
        font-size: 14px; }
  .section-features .feature:nth-child(3) {
    *zoom: 1;
    float: left;
    clear: none;
    text-align: inherit;
    width: 42.32%;
    margin-left: 0%;
    margin-right: 3%; }
    .section-features .feature:nth-child(3):before, .section-features .feature:nth-child(3):after {
      content: '';
      display: table; }
    .section-features .feature:nth-child(3):after {
      clear: both; }
    .section-features .feature:nth-child(3):last-child {
      margin-right: 0%; }
    .section-features .feature:nth-child(3) .large-text {
      margin-left: 45px; }
    .section-features .feature:nth-child(3) .description {
      font-size: 13px;
      vertical-align: top;
      margin-left: 11px; }
      .section-features .feature:nth-child(3) .description .black-text {
        margin-top: 5px;
        margin-bottom: 9px; }
      .section-features .feature:nth-child(3) .description img {
        margin-right: 20px;
        vertical-align: middle; }
        .section-features .feature:nth-child(3) .description img:last-child {
          margin-right: 0; }
  @media screen and (max-width: 1075px) {
    .section-features .feature:nth-child(1) .large-text,
    .section-features .feature:nth-child(2) .large-text,
    .section-features .feature:nth-child(3) .large-text {
      margin-left: 10px; } }

.section-plugin {
  padding-top: 34px;
  padding-bottom: 33px; }
  .section-plugin .wrapper {
    *zoom: 1;
    float: left;
    clear: none;
    text-align: inherit;
    width: 95.88%;
    margin-left: 2.575%;
    margin-right: 3%; }
    .section-plugin .wrapper:before, .section-plugin .wrapper:after {
      content: '';
      display: table; }
    .section-plugin .wrapper:after {
      clear: both; }
    .section-plugin .wrapper:last-child {
      margin-right: 0%; }
  .section-plugin .header-block .header-img, .section-plugin .header-block .header {
    display: inline-block;
    vertical-align: top; }
  .section-plugin .header-block .header {
    max-width: 500px;
    margin-left: 17px;
    padding-top: 5px; }
    .section-plugin .header-block .header p {
      margin-top: 0;
      margin-bottom: 10px;
      color: #808080;
      font-size: 14px; }
    .section-plugin .header-block .header h1 {
      margin-top: 0;
      line-height: 30px; }
  .section-plugin .presentation-block .information-block {
    *zoom: 1;
    float: left;
    clear: none;
    text-align: inherit;
    width: 49%;
    margin-left: 0%;
    margin-right: 0%;
    vertical-align: top; }
    .section-plugin .presentation-block .information-block:before, .section-plugin .presentation-block .information-block:after {
      content: '';
      display: table; }
    .section-plugin .presentation-block .information-block:after {
      clear: both; }
    .section-plugin .presentation-block .information-block p {
      margin-top: 0; }
  .section-plugin .presentation-block .video-block {
    *zoom: 1;
    float: left;
    clear: none;
    text-align: inherit;
    width: 36.14%;
    margin-left: 3.09%;
    margin-right: 3%; }
    .section-plugin .presentation-block .video-block:before, .section-plugin .presentation-block .video-block:after {
      content: '';
      display: table; }
    .section-plugin .presentation-block .video-block:after {
      clear: both; }
    .section-plugin .presentation-block .video-block:last-child {
      margin-right: 0%; }
    .section-plugin .presentation-block .video-block .video-wrapper {
      height: 140px; }
    .section-plugin .presentation-block .video-block img {
      width: 250px;
      height: 140px; }
  .section-plugin .presentation-block .inform {
    max-width: 340px;
    font-size: 16px; }

.custom-link-gray {
  padding-right: 15px;
  display: inline-block;
  position: relative; }
  .custom-link-gray .link-wrapper {
    display: inline-block;
    height: 40px;
    box-sizing: border-box;
    padding-top: 10px;
    padding-left: 30px;
    padding-right: 20px;
    position: relative;
    vertical-align: middle; }
  .custom-link-gray i {
    position: absolute;
    right: 10px;
    font-size: 22px;
    top: 9px; }
  .custom-link-gray img {
    position: absolute;
    left: 7px;
    top: 11px; }
  .custom-link-gray:hover {
    background: #f0f0f0; }
    .custom-link-gray:hover .link-wrapper {
      background: #e6e6e6; }

body {
  background-color: #f4f4f4; }

.container {
  *zoom: 1;
  width: auto;
  max-width: 1075px;
  float: none;
  display: block;
  margin-right: auto;
  margin-left: auto;
  padding-left: 0;
  padding-right: 0; }
  .container:before, .container:after {
    content: '';
    display: table; }
  .container:after {
    clear: both; }

.third {
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 33.3333%;
  margin-left: 0%;
  margin-right: 0%; }
  .third:before, .third:after {
    content: '';
    display: table; }
  .third:after {
    clear: both; }

.two-thirds {
  *zoom: 1;
  float: left;
  clear: none;
  text-align: inherit;
  width: 66.666%;
  margin-left: 0%;
  margin-right: 0%; }
  .two-thirds:before, .two-thirds:after {
    content: '';
    display: table; }
  .two-thirds:after {
    clear: both; }

.section-features .feature, .section-plugin {
  background: white; }
